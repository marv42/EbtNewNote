/*
 Copyright (c) 2010 - 2025 Marvin Horter.
 All rights reserved. This program and the accompanying materials
 are made available under the terms of the GNU Public License v2.0
 which accompanies this distribution, and is available at
 http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
 */

import com.mikepenz.aboutlibraries.plugin.DuplicateMode

plugins {
    id 'com.android.application'
    id 'kotlin-android'
}
apply plugin: libs.plugins.aboutlibraries.get().pluginId // has to be applied AFTER android
apply plugin: libs.plugins.cyclonedx.get().pluginId
apply plugin: libs.plugins.dependencycheck.get().pluginId
apply plugin: libs.plugins.likethesalad.get().pluginId
apply plugin: libs.plugins.scabbard.get().pluginId // does not work correctly :-/

aboutLibraries {
    duplicationMode = DuplicateMode.MERGE
    excludeFields = [ "generated" ]
    includePlatform = false
    prettyPrint = true
}

cyclonedxBom {
    projectType = "application"
}

dependencyCheck {
    nvd {
        apiKey="597e202d-30eb-4fb5-bd4e-5bfb1264de21"
    }
}

scabbard {
    enabled !gradle.startParameter.toString().contains("assembleRelease")
    outputFormat "svg" // we got png anyway :-/
    failOnError true
    fullBindingGraphValidation true
}

android {
    def marv42EbtNewNote = 'com.marv42.ebt.newnote'
//    F-Droid needs a static version
//    def majorVersion = 0
//    def minorVersion = 80
//    def patchVersion = 0
    namespace marv42EbtNewNote

    defaultConfig {
        applicationId marv42EbtNewNote
//        versionCode majorVersion * 10000 + minorVersion * 100 + patchVersion
//        versionName "${majorVersion.toString()}.${minorVersion.toString()}.${patchVersion.toString()}"
        versionCode 8100
        versionName "0.81.0"
        minSdkVersion libs.versions.minSdk.get().toInteger()
        compileSdk libs.versions.compileSdk.get().toInteger()
        targetSdkVersion libs.versions.targetSdk.get().toInteger()
        multiDexEnabled true
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"),
                    "proguard-rules.pro", "proguard-rules-acra.pro", "proguard-rules-gson.pro"
            signingConfig signingConfigs.debug
        }
        debug {
            debuggable true
            minifyEnabled false
            shrinkResources false
        }
    }

    flavorDimensions = ['ocrServiceKey']
    productFlavors {
        withKey {
            dimension 'ocrServiceKey'
            versionNameSuffix '-withKey'
        }
        withoutKey {
            dimension 'ocrServiceKey'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_21
        targetCompatibility JavaVersion.VERSION_21
    }

    buildFeatures {
        viewBinding true
    }

    configurations.configureEach {
        resolutionStrategy.force "com.google.code.findbugs:jsr305:3.0.2"
    }

    lint {
        disable 'MissingTranslation'
    }
}

allprojects {
    gradle.projectsEvaluated {
        tasks.withType(JavaCompile).tap {
            configureEach {
                options.compilerArgs += ["-Xlint:deprecation"]
                options.compilerArgs += ["-Xlint:unchecked"]
            }
        }
    }
}

dependencies {
    implementation libs.kotlinx.coroutines.core
    implementation libs.acra.mail
    implementation libs.acra.toast
//    implementation libs.activity
//    implementation libs.activity.ktx
    implementation libs.appcompat
    implementation libs.recyclerview
    implementation libs.exifinterface
    implementation libs.fragment.ktx
    implementation libs.preference.ktx
//    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion"
//    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycleVersion"
    implementation libs.security.crypto
    implementation libs.material
    implementation libs.gson
    implementation libs.dagger.android.support
    annotationProcessor "com.google.dagger:dagger-compiler:${libs.versions.daggerVersion.get()}"
    annotationProcessor "com.google.dagger:dagger-android-processor:${libs.versions.daggerVersion.get()}"
    implementation libs.aboutlibraries
    implementation libs.okhttp
    implementation libs.picasso
    implementation libs.tesseract4android.openmp
}
